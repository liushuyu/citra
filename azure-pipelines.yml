# variable definitions
resources:
  containers:
  - container: linux_fresh
    # options: -v "$HOME/.ccache":/root/.ccache
    image: citraemu/build-environments:linux-fresh
  - container: linux_frozen
    # options: -v "$HOME/.ccache":/root/.ccache
    image: citraemu/build-environments:linux-frozen
  - container: linux_mingw
    # options: -v "$HOME/.ccache":/root/.ccache
    image: citraemu/build-environments:linux-mingw
  - container: linux_clang_format
    image: citraemu/build-environments:linux-clang-format

jobs:
# Linux Docker container builders
- job: LinuxContainerBuilds
  pool:
    vmImage: 'ubuntu-16.04'

  container: $[ variables['containerResource'] ]

  strategy:
    matrix:
      linux-fresh:
        containerResource: linux_fresh
      linux-frozen:
        containerResource: linux_frozen
      linux-mingw:
        containerResource: linux_mingw
      clang-format:
        containerResource: linux_clang_format

  steps:
  - bash: git submodule update --init --recursive
    displayName: 'Fetch submodules'
  - bash: /bin/bash -ex ./.travis/${AGENT_JOBNAME}/docker.sh
    displayName: 'Build Citra'

# Transifex translation synchronization job
- job: LinuxTransifexSync
  # Azure pipeline's condition expression is very wired
  # the following means:
  # Build.SourceBranch == 'refs/heads/master' && Build.Repository.Uri == 'citra-emu/citra' && PUSH EVENT (IndividualCI)
  condition: |
    and(eq(variables['Build.SourceBranch'], 'refs/heads/master'),
        eq(variables['Build.Repository.Uri'],'https://github.com/citra-emu/citra.git'),
        eq(variables['Build.Reason'], 'IndividualCI'))
  pool:
    vmImage: 'ubuntu-16.04'
  # we don't use Docker integration here since azure pipeline
  # Docker integration requires guest Docker image to use GLibc
  steps:
  - bash: git submodule update --init --recursive
    displayName: 'Fetch submodules'
  - bash: /bin/bash -ex ./.travis/transifex/build.sh
    # set tx_token variable in the control panel and uncomment the following
    # env:
    #   TRANSIFEX_API_TOKEN: $(tx_token)
    displayName: 'Push translations'

# macOS native build
- job: macOSNativeBuilds
  pool:
    vmImage: 'macOS-10.13'

  steps:
  - bash: ./.travis/macos/deps.sh
    displayName: 'Install dependencies'
  - bash: git submodule update --init --recursive
    displayName: 'Fetch submodules'
  - bash: sudo xcode-select -s /Applications/Xcode_10.1.app/Contents/Developer
    displayName: 'Select XCode version'
  - bash: ./.travis/macos/build.sh
    displayName: 'Build Citra'

# Windows native build
- job: MSVCNativeBuilds
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - bash: git submodule update --init --recursive
    displayName: 'Fetch submodules'
  # TODO(liushuyu): maybe move this chunk to a folder just like other platforms?
  - bash: |
      mkdir build && cd build
      cmake -G "Visual Studio 15 2017 Win64" -DCITRA_USE_BUNDLED_QT=1 -DCITRA_USE_BUNDLED_SDL2=1 -DCITRA_ENABLE_COMPATIBILITY_REPORTING=${COMPAT} -DENABLE_COMPATIBILITY_LIST_DOWNLOAD=ON -DUSE_DISCORD_PRESENCE=ON  -DENABLE_MF=ON ..
      cmake --build . -- -m
    displayName: 'Build Citra'
